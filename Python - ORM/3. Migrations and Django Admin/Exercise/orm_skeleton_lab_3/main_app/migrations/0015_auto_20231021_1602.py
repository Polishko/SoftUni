# Generated by Django 4.2.4 on 2023-10-21 12:23

from django.db import migrations


def add_age_group(apps, schema_editor):
    Person = apps.get_model("main_app", "Person")

    all_people = Person.objects.all()

    for person in all_people:
        age = person.age

        if age <= 12:
            person.age_group = "Child"
        elif 13 < age < 17:
            person.age_group = "Teen"
        else:
            person.age_group = "Adult"

        person.save()
   
# instead of saving each person obj to db each time, you can say Person.objects.bulk_update(Person, ["age_group"]) and update after the for cyle finishes so this is more optimized


def reverse_add_age_group(apps, schema_editor):
    Person = apps.get_model("main_app", "Person")

    all_people = Person.objects.all()

    for person in all_people:
        person.age_group = "No age group"
        person.save()

# check Dilyan's file for the correct reverse function


class Migration(migrations.Migration):

    dependencies = [
        ('main_app', '0014_person'),
    ]

    operations = [migrations.RunPython(
        add_age_group, reverse_code=reverse_add_age_group
    )
    ]
